Add-Type -AssemblyName PresentationFramework

$XAML = @"
<Window xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        Title="SysDiag" Height="400" Width="600" ResizeMode="CanResize">
  <Grid Margin="10">
    <StackPanel>
      <Button Name="RunBtn" Content="Run Diagnostics" Width="150" Margin="0,0,0,10"/>
      <TextBox Name="OutputBox" Height="300" AcceptsReturn="True"
               VerticalScrollBarVisibility="Auto" FontFamily="Consolas"/>
      <Button Name="ClearBtn" Content="Clear" Width="150" Margin="0,10,0,0"/>
    </StackPanel>
  </Grid>
</Window>
"@

# Load GUI window
$reader = [System.Xml.XmlNodeReader]::new([xml]$XAML)
$window = [Windows.Markup.XamlReader]::Load($reader)
$runBtn = $window.FindName("RunBtn")
$clearBtn = $window.FindName("ClearBtn")
$outputBox = $window.FindName("OutputBox")

# Diagnostics logic
$runBtn.Add_Click({
    $outputBox.Clear()

    # System Info
    $outputBox.AppendText("üì¶ System Info:`n")
    $outputBox.AppendText((Get-CimInstance Win32_ComputerSystem | Select Model, Manufacturer | Out-String))

    # CPU Load
    $outputBox.AppendText("üî• CPU Load (%):`n")
    $cpu = Get-Counter '\Processor(_Total)\% Processor Time'
    $outputBox.AppendText($cpu.CounterSamples.CookedValue.ToString("0.00") + "%`n")

    # Memory
    $outputBox.AppendText("üß† Memory:`n")
    $mem = Get-CimInstance Win32_OperatingSystem
    $freeMB = [math]::Round($mem.FreePhysicalMemory / 1024, 2)
    $totalMB = [math]::Round($mem.TotalVisibleMemorySize / 1024, 2)
    $outputBox.AppendText("  Free: $freeMB MB`n  Total: $totalMB MB`n")

    # Disk
    $outputBox.AppendText("üíΩ Disk Usage:`n")
    $outputBox.AppendText((Get-PSDrive -PSProvider FileSystem | Select Name, Used, Free | Out-String))

    # Network
    $outputBox.AppendText("üåê Internet Check:`n")
    if (Test-Connection google.com -Count 2 -Quiet) {
        $outputBox.AppendText("  ‚úÖ Online`n")
    } else {
        $outputBox.AppendText("  ‚ùå Offline`n")
    }

    $outputBox.AppendText("‚úÖ Diagnostics Complete.`n")
})

# Clear button
$clearBtn.Add_Click({ $outputBox.Clear() })

# Show window (no auto-close)
$null = $window.ShowDialog()
